#include <stdio.h>
#include <stdlib.h>
#include <locale.h>
#include <iostream>
#include <conio.h>
#include <string>
#include <string.h>
#include <time.h>

using namespace std;

typedef struct informacoesTarefa{
    char nome[100];
    int responsaveis;
    int semana[7];
    char descricao [10000];
}tarefas;

void limparTela(){
    system("CLS");
}

void menuPrincipal();
void calendario();
void tarefasFixadas();

void teclaVoltar(){
    cout << "     ______\n";
    cout << "<-- |Voltar|\n";
    cout << "     ------ \n";
}

void testarErro(FILE *arquivo){
    if(arquivo == NULL){
        cout << "\n\nERRO EM ABERTURA DE ARQUIVOS";
        exit(0);
    }
}

void exibeCalendario(){
    FILE *arq;
    teclaVoltar();

    cout << "Lista de tarefas no DOMINGO\n";

    cout << "Lista de tarefas na SEGUNDA-FEIRA\n";

    cout << "Lista de tarefas na TERÇA-FEIRA\n";

    cout << "Lista de tarefas na QUARTA-FEIRA\n";

    cout << "Lista de tarefas na QUINTA-FEIRA\n";

    cout << "Lista de tarefas na SEXTA-FEIRA\n";

    cout << "Lista de tarefas no SÁBADO\n";

    /*cout << " _____________________________________________________________________ \n";
    cout << "|   DOM   |   SEG   |   TER   |   QUA   |   QUI   |   SEX   |   SAB   |\n";
    cout << " --------------------------------------------------------------------- \n";
    for(i = 0; i < 9; i ++)
        cout << "|         |         |         |         |         |         |         |\n";
    cout << "|_________|_________|_________|_________|_________|_________|_________|\n";*/

}

void adicionarNaLista(tarefas *nomeDaTarefa){
    FILE *lista = fopen("fixadasLista.txt", "a");
    testarErro(lista);
    //Nao podemos mudar esse scanf para fgets
    //Também não podemos colocar o \n do fputs de baixo do fputs que imprime no arquivo, ouviu bem tarcídio?
    fputs("\n", lista);
    fputs(nomeDaTarefa->nome, lista);
    fclose(lista);
}

void nomePasta(tarefas *nomeDaTarefa, char *temp){
    strcpy(temp,"tarefas/");
    strcat(temp, nomeDaTarefa->nome);
}

void adicionarNaPastaTarefas(tarefas *nomeDaTarefa){
    char *temp = (char*)calloc(100, sizeof(char));
    nomePasta(nomeDaTarefa, temp);
    strcat(temp, ".txt");

    FILE *afazer = fopen(temp, "wt");
    testarErro(afazer);

    fputs(nomeDaTarefa->nome, afazer);

    fclose(afazer);

    afazer = NULL;

    free(temp);
}

void adicionarNaPastaBinario(tarefas *nomeDaTarefa){
    char *temp = (char*)calloc(100, sizeof(char));
    nomePasta(nomeDaTarefa, temp);
    strcat(temp, ".dat");

    FILE *afazer = fopen(temp, "w");
    testarErro(afazer);

    fprintf(afazer ,"%d", nomeDaTarefa->responsaveis);

    fclose(afazer);

    afazer = NULL;

    free(temp);
}

void ordenaVetor(int *vetor, int indice){
    int temp, i, j;

    for(i = 0; i < indice; i++)
        for(j = i + 1; j < indice; j++)
            if(vetor[i] > vetor[j]){
                temp = vetor[i];
                vetor[i] = vetor[j];
                vetor[j] = temp;
            }
}

void adicionarNaDescricaoTarefas(tarefas *nomeDaTarefa){
    char *temp = (char*)calloc(100, sizeof(char));
    nomePasta(nomeDaTarefa, temp);
    strcat(temp, ".txt");

    FILE *afazer = fopen(temp, "at");
    testarErro(afazer);

    fputs("\n", afazer);
    fputs(nomeDaTarefa->descricao, afazer);

    fclose(afazer);

    afazer = NULL;

    free(temp);
}

void adicionaNoCalendario(tarefas *nomeDaTarefa, char *stringando){
    char *testando = (char*)calloc(100, sizeof(char));

    strcpy(testando, stringando);
    strcat(testando, ".txt");

    FILE *arq = fopen(testando, "a+");
    testarErro(arq);

    fprintf(arq, "\n");
    fprintf(arq, "%s", nomeDaTarefa->nome);

    fclose(arq);
    free(testando);

    arq = NULL;
}

void adicionaSemana(tarefas *nomeDaTarefa, int *vetor, int indice){
    char *temp = (char*)calloc(100, sizeof(char));
    nomePasta(nomeDaTarefa, temp);
    strcat(temp, ".txt");

    FILE *afazer = fopen(temp, "a");
    testarErro(afazer);

    fputs("\n", afazer);

    int i;

    for(i = 0; i < indice; i++){
        switch(vetor[i]){
            case 1:
                fprintf(afazer, "domingo, ");
                adicionaNoCalendario(nomeDaTarefa, "semana/domingo");
                break;
            case 2:
                fprintf(afazer, "segunda, ");
                adicionaNoCalendario(nomeDaTarefa, "semana/segunda");
                break;
            case 3:
                fprintf(afazer, "terca, ");
                adicionaNoCalendario(nomeDaTarefa, "semana/terca");
                break;
            case 4:
                fprintf(afazer, "quarta, ");
                adicionaNoCalendario(nomeDaTarefa, "semana/quarta");
                break;
            case 5:
                fprintf(afazer, "quinta, ");
                adicionaNoCalendario(nomeDaTarefa, "semana/quinta");
                break;
            case 6:
                fprintf(afazer, "sexta, ");
                adicionaNoCalendario(nomeDaTarefa, "semana/sexta");
                break;
            case 7:
                fprintf(afazer, "sabado, ");
                adicionaNoCalendario(nomeDaTarefa, "semana/sabado");
                break;
        }
    }

    fclose(afazer);

    afazer = NULL;

    free(temp);
}


int *adicionaVetor(int *vetor, int *indice, int num, int *cuidado){
    int i, cont = 0;

    //Verifica se já foi enviado pelo menos uma vez o num
    for(i = 0; i < (*indice); i ++)
        if(vetor[i] == num){
            (*cuidado)++;
            return vetor;
        }

    (*indice)++;
    vetor = (int*)realloc(vetor, (*indice)*sizeof(int));
    vetor[(*indice) - 1] = num;
    return vetor;


}

void adicionaFixadas(){
    limparTela();

    teclaVoltar();
    cout<< "               ADICIONAR TAREFAS\n\n";
    //Esse é um rascunho de como será adicionado as informações das tarefas, porém, pretendo mudar
    cout<< "Nessa aba, será solicitado:\n";
    cout<< " 1- Nome da Tarefa;\n";
    cout<< " 2- Dias da semana que será executada;\n";
    cout<< " 3- Número de responsáveis;\n";
    cout<< " 4- Descrição da tarefa;\n\n";

    tarefas *work = (tarefas*)calloc(1, sizeof(tarefas));
    //Criar uma funcao que proiba o uso de caracteres especiais
    cout << "Primeiro, digite o nome da tarefa (não use caracteres especiais): ";
    scanf("%[^\n]s", work->nome);

    adicionarNaLista(work);
    adicionarNaPastaTarefas(work);

    cout << "\nSegundo, digite o número de responsáveis: ";
    scanf("%d", &work->responsaveis);

    adicionarNaPastaBinario(work);

    cout << "\nTerceiro, selecione os dias da semana:\n";
    cout << " 1- Domingo\n";
    cout << " 2- Segunda-feira\n";
    cout << " 3- Terça-feira\n";
    cout << " 4- Quarta-feira\n";
    cout << " 5- Quinta-feira\n";
    cout << " 6- Sexta-feira\n";
    cout << " 7- Sábado-feira\n";

    cout << "\nOBS:Após selecionar todos os dias, aperte a tecla \"ENTER\" ";
    //cout << "Pressione enter para confirmar ou selecione mais dias\n"

    char opcao;
    int cuidado = 0;
    int a = 0;
    int *vetor = (int*)calloc(a, sizeof(int));
    int num;

    cout << "\nAdicionando:";
    while(opcao != 13){
        opcao = getch();
        switch(opcao){
            case '1':
                vetor = adicionaVetor(vetor, &a, 1, &cuidado);
                if(cuidado == 0)
                    cout << "\n Domingo";
                break;
            case '2':
                vetor = adicionaVetor(vetor, &a, 2, &cuidado);
                if(cuidado == 0)
                    cout << "\n Segunda-feira";
                break;
            case '3':
                vetor = adicionaVetor(vetor, &a, 3, &cuidado);
                if(cuidado == 0)
                    cout << "\n Terça-feira";
                break;
            case '4':
                vetor = adicionaVetor(vetor, &a, 4, &cuidado);
                if(cuidado == 0)
                    cout << "\n Quarta-feira";
                break;
            case '5':
                vetor = adicionaVetor(vetor, &a, 5, &cuidado);
                if(cuidado == 0)
                    cout << "\n Quinta-feira";
                break;
            case '6':
                vetor = adicionaVetor(vetor, &a, 6, &cuidado);
                if(cuidado == 0)
                    cout << "\n Sexta-feira";
                break;
            case '7':
                vetor = adicionaVetor(vetor, &a, 7, &cuidado);
                if(cuidado == 0)
                    cout << "\n Sábado";
                break;
            case 8:

                //parei aqui


                cout << "\r (esse dia foi excluído na lista)";
                a--;
                vetor = (int*)realloc(vetor,a*sizeof(int));

                break;
        }
        cuidado = 0;
    }

    ordenaVetor(vetor, a);

    adicionaSemana(work, vetor, a);

    free(vetor);

    cout << "\n\nAdicione, agora, uma descrição(tecle ENTER ao terminar):";
    setbuf(stdin, NULL);
    fgets(work->descricao, sizeof(work->descricao), stdin);
    adicionarNaDescricaoTarefas(work);

    free(work);

    tarefasFixadas();
}

void tarefasFixadas(){
    char opcao;
    int cont = 0;

    while( (opcao < 49 || opcao > 51) && (opcao != -32) ){
        limparTela();

        teclaVoltar();
        cout << "              TAREFAS FIXADAS\n\n";
        cout << "Listas de tarefas fixadas:\n";

        FILE *lista = fopen("fixadasLista.txt", "r");
        char texto[100];

        //testarErro(lista);
        if(lista == NULL){
            cout << "\n\nAinda não há nenhuma tarefa";
        } else{
            while( !feof(lista) ){
                fgets(texto, sizeof(texto), lista);
                //fscanf(lista, "%s", texto);
                cout << texto;
            }
        }

        fclose(lista);

        cout << "\n\n\nInsira um comando\n";
        cout << "1- Adicionar novas tarefas fixas\n";
        cout << "2- Visualizar alguma tarefa fixa\n";
        cout << "3- Excluir alguma tarefa fixa\n";

        if(cont != 0)
            cout << "\n\nOpção inválida. Digite novamente um novo comando.\n";

        opcao = getch();

        cont ++;
    }

    switch(opcao){
        case -32:
            opcao = getch();
            if(opcao == 75)
                calendario();
            break;
        case  '1':
            adicionaFixadas();
            break;
        case '2':
            break;
        case '3':
            break;
    }
}

void calendario(){
    char opcao;
    int cont = 0;

    while( (opcao < 49 || opcao > 51) && (opcao != -32) ){
        limparTela();

        exibeCalendario();

        cout << "\nInsira um comando\n";
        cout << "1- Inserir tarefas fixadas\n";
        cout << "2- Inserir tarefas semanais\n";
        cout << "3- Inserir tarefas mensais\n";

        if(cont != 0)
            cout << "\n\nOpção inválida. Digite novamente um novo comando.\n";

        opcao = getch();

        cont ++;
    }

    cont = 0;

    switch(opcao){
        case -32:
            opcao = getch();
            if(opcao == 75)
                menuPrincipal();
            break;
        case  '1':
            tarefasFixadas();
            break;
        case '2':
            break;
        case '3':
            break;
    }
}

void menuPrincipal(){
    char opcao;
    int cont = 0;

    while(opcao < 49 || opcao > 52){
        limparTela();
        cout << "    Aplicação ComApp    \n";
        cout << "1- Calendario\n";
        cout << "2- Usuario\n";
        cout << "3- Recado importantes\n";
        cout << "4- Membros\n";

        if(cont != 0)
            cout << "\n\nOpção inválida. Digite novamente um novo comando.\n";

        opcao = getch();

        cont ++;
    }

    cont = 0;

    switch(opcao){
        case '1':
            calendario();
            break;
        case '2':
            break;
        case '3':
            break;
        case '4':
            break;
    }
}

int main(){
    setlocale(LC_ALL, "Portuguese");

    menuPrincipal();

    return 0;

    system("pause");
}
